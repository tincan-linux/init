#!/bin/sh

# This is a simple script to handle startup and shutdown.

. /etc/rc.conf

log() {
    color="$1"
    shift
    printf "\033[1;3%sm%s\033[00m\n" "$color" "$*"
}

log_noline() {
    color="$1"
    shift
    printf "\033[1;3%sm%s\033[00m" "$color" "$*"
}

panic() {
    log 1 "There was an error, starting emergency shell. Type exit to continue boot."
    /bin/sh
}

startup() {
    export PATH=/bin:$PATH
    # Set console font
    [ -z "$FONT" ] || loadfont < "/usr/share/consolefonts/$FONT"

    log 5 '   _____ _           ___'
    log 5 '  /__   (_)_ __     / __\__ _ _ __'
    log 5 '    / /\/ | '\''_ \   / /  / _` | '\''_ \'
    log 5 '   / /  | | | | | / /__| (_| | | | |'
    log 5 '   \/   |_|_| |_| \____/\__,_|_| |_|'
    log 5 ''

    # Mount API filesystems
    log 3 "Mounting API filesystems..."
    mountpoint -q /proc || mount -t proc proc /proc -o nosuid,noexec,nodev
    mountpoint -q /sys || mount -t sysfs sys /sys -o nosuid,noexec,nodev
    mountpoint -q /run || mount -t tmpfs run /run -o mode=0755,nosuid,nodev
    mountpoint -q /dev || mount -t devtmpfs dev /dev -o mode=0755,nosuid
    
    mkdir -p /run/user /run/lock /run/log /run/runit /dev/pts /dev/shm
    
    mountpoint -q /dev/pts || mount -t devpts devpts /dev/pts -o mode=0620,gid=5,nosuid,noexec
    mountpoint -q /dev/shm || mount -t tmpfs shm /dev/shm -o mode=1777,nosuid,nodev

    # Initialize devices
    log 3 "Setting up loopback device..."
    ip link set up dev lo

    log 3 "Starting mdev..."
    mdev -s
    mdev -df & pid_mdev=$!

    # Set hostname and mount filesystems
    log 3 "Setting hostname..."
    echo "$HOSTNAME" >| /proc/sys/kernel/hostname

    log 3 "Mounting root as readonly..."
    mount -o remount,ro / || panic

    log 3 "Checking filesystems..."
    fsck -ATat noopts=_netdev > /run/log/fsck
    [ $? -gt 1 ] && panic

    log 3 "Mounting all filesystems..."
    mount -o remount,rw / || panic
    mount -a || panic
    swapon -a || panic

    # Kill device manager so that it can be started by runit
    # Services are started by inittab after this script exits
    log 3 "Starting services..."

    {
        kill $pid_mdev
        command -v mdev > /proc/sys/kernel/hotplug
    } 2> /dev/null

    # Calculate boot time
    IFS=. read -r boot_time _ < /proc/uptime
    log 2 "Boot completed in $boot_time seconds."
}

shutdown() {
    # Stop all running services
    log 3 ""
    log 3 ""
    log 3 "Stopping services..."
    sv force-shutdown /var/service/* > /dev/null 2>&1

    # Kill running processes
    log 3 "Sending TERM signal to all processes..."
    kill -s TERM -1
    sleep 2
    log 3 "Sending KILL signal to all processes..."
    kill -s KILL -1

    # Unmount filesystems
    log 3 "Unmounting all filesystems..."
    swapoff -a
    umount -rat nosysfs,proc,devtmpfs,tmpfs
    mount -o remount,ro /
    sync

    log 1 "Shutting down."
}

sv_enable() {
    ln -sv /etc/sv/$1 /var/service/
    sv up $1
}

sv_disable() {
    sv down $1
    rm -v /var/service/$1
}

sv_list() {
    for sv in /etc/sv/*; do
        if [ -L /var/service/$(basename $sv) ]; then
            log_noline 2 "[x] "
            log 0 $(basename $sv)
        else
            log_noline 1 "[ ] "
            log 0 $(basename $sv)
        fi
    done
}

case $1 in
    startup)
        startup;;
    shutdown)
        shutdown;;
    enable)
        sv_enable $2;;
    disable)
        sv_disable $2;;
    list)
        sv_list;;
    *)
        echo "Usage: $0 [enable | disable | list] [sv]";;
esac
